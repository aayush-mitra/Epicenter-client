{"version":3,"sources":["utils/storage.js","utils/authfuncs.js","storage.js","components/Home.js","utils/socket.js","components/Chat.js","App.js","reportWebVitals.js","index.js"],"names":["getFromStorage","key","valueStr","localStorage","getItem","JSON","parse","err","setInStorage","obj","console","log","setItem","stringify","login","proxy","user","cb","fetch","method","headers","body","then","res","json","success","MyProvider","props","state","token","userData","proxy2","MyContext","Provider","value","this","changeToken","setState","setUserData","data","children","Component","React","createContext","Home","register","name","email","password","redirect","onChange","bind","select1","select2","onSubmit","e","target","preventDefault","newUser","context","data2","conversations","tag","_id","info","to","id","className","href","xmlns","viewBox","fill","fillOpacity","d","onClick","htmlFor","type","contextType","socket","io","Chat","new","convoid","match","params","conversation","isLoading","message","newFocused","messagesEnd","createRef","inputRef","logout","onNew","onSend","scrollToBottom","onFocus","onBlur","current","focus","on","response","convo","undefined","forEach","emit","prevProps","prevState","name1","split","userid","window","location","author","text","stuff","Date","setParentToken","people","messages","style","overflow","map","i","backgroundColor","placeholder","ref","slice","reverse","msg","date","nextProps","App","error","t","display","justifyContent","alignItems","height","color","basename","process","path","exact","strict","render","Fragment","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","thing","Consumer","ReactDOM","document","getElementById"],"mappings":"wRAAO,SAASA,EAAeC,GAC7B,IAAKA,EACH,OAAO,KAGT,IACE,IAAMC,EAAWC,aAAaC,QAAQH,GACtC,OAAIC,EACKG,KAAKC,MAAMJ,GAEb,KACP,MAAOK,GACP,OAAO,MAIJ,SAASC,EAAaP,EAAKQ,GAC3BR,GACHS,QAAQC,IAAI,yBAGd,IACER,aAAaS,QAAQX,EAAKI,KAAKQ,UAAUJ,IACzC,MAAOF,GACPG,QAAQC,IAAIJ,ICRT,SAASO,EAAMC,EAAOC,EAAMC,GACjCC,MAAM,GAAD,OAAIH,EAAJ,eAAwB,CAC3BI,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,8BAA+B,KAEjCC,KAAMhB,KAAKQ,UAAUG,KACpBM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACAA,EAAKC,SACPR,EAAGO,M,iBCDIE,EAxBf,kDACI,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAO,GACPC,SAAU,GACVf,MAAO,0CACPgB,OAAQ,8BANG,EADvB,0CAWI,WAAU,IAAD,OACL,OACI,cAACC,EAAUC,SAAX,CAAoBC,MAAO,CACvBN,MAAOO,KAAKP,MACZQ,YAAa,SAACP,GAAD,OAAW,EAAKQ,SAAS,CAAER,MAAOA,KAC/CS,YAAa,SAACC,GAAD,OAAU,EAAKF,SAAS,CAAEP,SAAUS,MAHrD,SAKKJ,KAAKR,MAAMa,eAlB5B,GAAgCC,aAyBnBT,EAAYU,IAAMC,gBChBlBC,EAAb,kDACI,WAAYjB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTiB,SAAU,EAAKlB,MAAMkB,SACrBC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,UAAU,GAGd,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKE,QAAU,EAAKA,QAAQF,KAAb,gBACf,EAAKG,SAAW,EAAKA,SAASH,KAAd,gBAbD,EADvB,4CAiBI,SAASI,GACLpB,KAAKE,SAAL,eACKkB,EAAEC,OAAOV,KAAOS,EAAEC,OAAOtB,UAnBtC,qBAuBI,WACIC,KAAKE,SAAS,CACVQ,UAAU,MAzBtB,qBA6BI,WACIV,KAAKE,SAAS,CACVQ,UAAU,MA/BtB,sBAmCI,SAASU,GAAI,IF9CQxC,EAAOC,EAAMC,EE8CtB,SAKJkB,KAAKP,MAHLkB,EAFI,EAEJA,KACAC,EAHI,EAGJA,MACAC,EAJI,EAIJA,SAGJ,GADAO,EAAEE,iBACEtB,KAAKP,MAAMiB,SAAU,CACrB,IAAMa,EAAU,CACZZ,OACAC,QACAC,YFzDSjC,EE4DJoB,KAAKwB,QAAQ/B,MAAMb,MF5DRC,EE4De0C,EF5DTzC,EE4DkB,SAACsB,GACzCzB,EAAM,EAAK6C,QAAQ/B,MAAMb,MAAO2C,GAAS,SAACE,GAAW,IAAD,EAO5CrB,EAAKvB,KALL+B,EAF4C,EAE5CA,MACAD,EAH4C,EAG5CA,KACAe,EAJ4C,EAI5CA,cACAC,EAL4C,EAK5CA,IACAC,EAN4C,EAM5CA,IAGJ,EAAKJ,QAAQrB,YAAY,CACrBS,QACAD,OACAe,gBACAE,MACAD,QAGJtD,EAAa,YAAa,CAACqB,MAAO+B,EAAM/B,QACxC,EAAK8B,QAAQvB,YAAYwB,EAAM/B,OAE/B,EAAKQ,SAAS,CACVS,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,UAAU,IAGd,EAAKtB,MAAMS,YAAYwB,EAAM/B,WFvF/CX,MAAM,GAAD,OAAIH,EAAJ,kBAA2B,CAC9BI,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,8BAA+B,KAEjCC,KAAMhB,KAAKQ,UAAUG,KACpBM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACAA,EAAKC,SACPR,EAAGO,UEgFI,CACH,IAAMwC,EAAO,CACTjB,QACAC,YAEJlC,EAAMqB,KAAKwB,QAAQ/B,MAAMb,MAAOiD,GAAM,SAACJ,GAAU,MAQzCA,EAAM5C,KALV+B,EAH6C,EAG7CA,MACAD,EAJ6C,EAI7CA,KACAe,EAL6C,EAK7CA,cACAC,EAN6C,EAM7CA,IACAC,EAP6C,EAO7CA,IAGA,EAAKJ,QAAQrB,YAAY,CACzBS,QACAD,OACAe,gBACAC,MACAC,QAIAvD,EAAa,YAAa,CAACqB,MAAO+B,EAAM/B,QACxC,EAAK8B,QAAQvB,YAAYwB,EAAM/B,OAC/B,EAAKF,MAAMS,YAAYwB,EAAM/B,OAE7B,EAAKQ,SAAS,CACdS,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,UAAU,UAhH1B,oBAuHI,WAEI,OAAId,KAAKP,MAAMqB,SACH,cAAC,IAAD,CAAUgB,GAAG,UAIrB,sBAAKC,GAAG,OAAR,UACI,qBAAKC,UAAU,SAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,mBAAGC,KAAK,aAAR,SAAqB,oBAAID,UAAU,OAAd,yBACrB,8BACI,+BACI,6BAAI,mBAAGC,KAAK,QAAR,oBACJ,6BAAI,mBAAGA,KAAK,aAAR,wBACJ,6BAAI,mBAAGA,KAAK,kBAAR,wCAMpB,qBAAKD,UAAU,OAAf,SACQ,sBAAKD,GAAG,eAAeC,UAAU,qBAAjC,UACI,sBAAKD,GAAG,OAAR,UACI,qBAAKG,MAAM,6BAA6BC,QAAQ,eAAhD,SAA+D,sBAAMC,KAAK,UAAUC,YAAY,IAAIC,EAAE,qCACtG,sBAAKN,UAAU,gBAAf,UACI,qBAAID,GAAG,iBAAP,wBAAmC,uBAAnC,WAAiD,uBAAjD,WACA,kFACA,iCACA,mBAAGE,KAAK,kBAAR,SAA0B,8DAIlC,qBAAKF,GAAG,YAAR,SACI,sBAAKA,GAAG,WAAR,UACI,qBAAKA,GAAG,eACR,qBAAKG,MAAM,6BAA6BC,QAAQ,eAAhD,SAA+D,sBAAMC,KAAK,OAAOC,YAAY,IAAIC,EAAE,sCACnG,sBAAKN,UAAU,gBAAf,UACI,oBAAID,GAAG,iBAAP,0DACA,0EAIZ,qBAAKA,GAAG,iBAAR,SACI,qBAAKA,GAAG,eAAeC,UAAU,qBAAjC,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAWhC,KAAKP,MAAMiB,SAAW,SAAW,uBAAwB6B,QAASvC,KAAKiB,QAAvF,mBACA,qBAAKe,UAAWhC,KAAKP,MAAMiB,SAAW,uBAAyB,SAAU6B,QAASvC,KAAKkB,QAAvF,sBACA,sBAAKc,UAAU,yBAAf,UACChC,KAAKP,MAAMiB,SACZ,gCACI,uBAAO8B,QAAQ,OAAf,oBAAoC,uBACpC,uBAAOC,KAAK,OAAOT,UAAU,YAAYrB,KAAK,OAAOZ,MAAOC,KAAKP,MAAMkB,KAAMI,SAAUf,KAAKe,cACvF,KACT,gCACI,uBAAOyB,QAAQ,WAAf,qBAAyC,uBACzC,uBAAOC,KAAK,QAAQT,UAAU,YAAYrB,KAAK,QAAQZ,MAAOC,KAAKP,MAAMmB,MAAOG,SAAUf,KAAKe,cAEnG,gCACI,uBAAOyB,QAAQ,WAAf,wBAA4C,uBAC5C,uBAAOC,KAAK,WAAWT,UAAU,YAAYrB,KAAK,WAAWZ,MAAOC,KAAKP,MAAMoB,SAAUE,SAAUf,KAAKe,cAE5G,8BACI,wBAAQwB,QAASvC,KAAKmB,SAAtB,4CAtL5C,GAA0Bb,aAqMXG,IACfA,EAAKiC,YAAc7C,E,YC/MN8C,E,MAASC,GAAG,sCCSZC,G,MAAb,kDAEI,WAAYrD,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTqB,UAAU,EACVgC,KAAK,EACLnC,KAAM,GACNoC,QAAS,EAAKvD,MAAMwD,MAAMC,OAAOlB,GACjCmB,aAAc,GACdC,WAAW,EACXC,QAAS,GACTC,YAAY,GAIhB,EAAKC,YAAc/C,IAAMgD,YACzB,EAAKC,SAAWjD,IAAMgD,YAEtB,EAAKE,OAAS,EAAKA,OAAOzC,KAAZ,gBACd,EAAK0C,MAAQ,EAAKA,MAAM1C,KAAX,gBACb,EAAKD,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAK2C,OAAS,EAAKA,OAAO3C,KAAZ,gBACd,EAAK4C,eAAiB,EAAKA,eAAe5C,KAApB,gBACtB,EAAK6C,QAAU,EAAKA,QAAQ7C,KAAb,gBACf,EAAK8C,OAAS,EAAKA,OAAO9C,KAAZ,gBACd,EAAK2B,OAASA,EAxBC,EAFvB,qDAmCI,WAAqB,IAAD,OAEX3C,KAAKP,MAAM0D,WAERnD,KAAKP,MAAMsD,SACX/C,KAAKwD,SAASO,QAAQC,QAG9BhE,KAAK2C,OAAOsB,GAAG,iBAAiB,WAC5BlF,MAAM,GAAD,OAAI,EAAKyC,QAAQ/B,MAAMb,MAAvB,8BAAkD,EAAK4C,QAAQ/B,MAAMC,QACrEP,MAAK,SAAA+E,GAAQ,OAAIA,EAAS7E,UAC1BF,MAAK,SAAAE,GACF,EAAKmC,QAAQrB,YAAYd,EAAKR,YAI1CmB,KAAK2C,OAAOsB,GAAG,qBAAqB,SAACE,GACjC5F,QAAQC,IAAI,OACZ,EAAK0B,SAAS,CACVgD,aAAciB,EACdf,QAAS,aAGUgB,IAAvBpE,KAAKP,MAAMsD,QACX/C,KAAKwB,QAAQ/B,MAAME,SAAS+B,cAAc2C,SAAQ,SAAAnB,GAC1CA,EAAatB,MAAQ,EAAKnC,MAAMsD,UAChC,EAAKJ,OAAO2B,KAAK,YAAa,EAAK7E,MAAMsD,QAAS,EAAKvB,QAAQ/B,MAAME,SAASiC,KAC9ErD,QAAQC,IAAI0E,GAEZ,EAAKhD,SAAS,CACVgD,aAAcA,EACdC,WAAW,QAKvBnD,KAAKE,SAAS,CACViD,WAAW,MAxE3B,gCA8EI,SAAmBoB,EAAWC,GAAY,IAAD,OAChCxE,KAAKP,MAAM0D,YAEZ5E,QAAQC,IAAI,IACPwB,KAAKP,MAAM4D,YAAcrD,KAAKP,MAAMsD,SAIzCyB,EAAUtB,aAAatB,MAAQ5B,KAAKP,MAAMsD,SAC1C/C,KAAKwB,QAAQ/B,MAAME,SAAS+B,cAAc2C,SAAQ,SAAAnB,GAC1CA,EAAatB,MAAQ,EAAKnC,MAAMsD,UAChC,EAAKJ,OAAO2B,KAAK,YAAa,EAAK7E,MAAMsD,QAAS,EAAKvB,QAAQ/B,MAAME,SAASiC,KAC9ErD,QAAQC,IAAI0E,GACZ3E,QAAQC,IAAI0E,EAAatB,IAAK,EAAKnC,MAAMsD,SACzCxE,QAAQC,IAAI0E,EAAc,EAAKzD,MAAMyD,cACrC,EAAKhD,SAAS,CACVgD,aAAcA,EACdC,WAAW,UA/FnC,oBAsGI,WACInD,KAAKE,SAAS,CACVmD,YAAY,MAxGxB,qBA4GI,WACIrD,KAAKE,SAAS,CACVmD,YAAY,MA9GxB,sBAmHI,SAASjC,GACLpB,KAAKE,SAAL,eACKkB,EAAEC,OAAOV,KAAOS,EAAEC,OAAOtB,UArHtC,mBAyHI,SAAMqB,GAAI,IAAD,OAEL,GADAA,EAAEE,kBACoB,IAAnBtB,KAAKP,MAAMqD,IACV9C,KAAKE,SAAS,CACV4C,KAAK,QAEN,CAAC,IAEAnC,EACAX,KAAKP,MADLkB,KAGA8D,EAAQ9D,EAAK+D,MAAM,KAAK,GACxB/C,EAAMhB,EAAK+D,MAAM,KAAK,GAE1B3F,MAAM,GAAD,OAAIiB,KAAKwB,QAAQ/B,MAAMb,MAAvB,qBAAiD,CAClDI,OAAQ,OACRC,QAAS,CACT,eAAgB,mBAChB,8BAA+B,KAE/BC,KAAMhB,KAAKQ,UAAU,CACjBiC,KAAM8D,EACN9C,MACAgD,OAAQ3E,KAAKwB,QAAQ/B,MAAME,SAASiC,QAEzCzC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAAE,GACFA,EAAKC,UACLf,QAAQC,IAAIa,GACZ,EAAKsD,OAAO2B,KAAK,wBACjBM,OAAOC,SAAS5C,KAAhB,UAA0B,EAAKT,QAAQ/B,MAAMG,QAA7C,OAAsDP,EAAK+D,QAAQxB,YAvJvF,4BA6JI,cA7JJ,oBAkKI,SAAOR,GACH,IAAM0D,EAAS9E,KAAKwB,QAAQ/B,MAAME,SAASgB,KACrCoE,EAAO/E,KAAKP,MAAM2D,QAClBL,EAAU/C,KAAKP,MAAMsD,QAEvBiC,GADQ,IAAIC,KACJ,CACRH,OAAQA,EACRC,KAAMA,EACNhC,QAASA,IAEb3B,EAAEE,iBACW,KAATyD,GACA/E,KAAK2C,OAAO2B,KAAK,eAAgBtE,KAAKP,MAAMsD,QAASiC,KA9KjE,oBAmLI,SAAO5D,GAAI,IAAD,OACNA,EAAEE,iBACF,IAAMhD,EAAMT,EAAe,aAEvBS,GAAOA,EAAIoB,OACXX,MAAMiB,KAAKwB,QAAQ/B,MAAMb,MAAQ,sBAAwBN,EAAIoB,OACxDP,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACEA,EAAKC,UACL,EAAKE,MAAM0F,eAAe,IAC1B,EAAK1D,QAAQvB,YAAY,IACzB,EAAKuB,QAAQrB,YAAY,UA9LjD,oBAoMI,WAAU,IAAD,SAKDH,KAAKP,MAAMyD,aAFXiC,EAHC,EAGDA,OACAC,EAJC,EAIDA,SAGJ,OAA6B,IAAzBpF,KAAKP,MAAM0D,UACH,YAGR,sBAAKpB,GAAG,OAAR,UACI,qBAAKC,UAAU,SAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,mBAAGC,KAAK,aAAR,SAAqB,oBAAID,UAAU,OAAd,yBACrB,8BACI,6BAEI,6BAAI,cAAC,IAAD,CAAMF,GAAG,IAAIS,QAASvC,KAAKyD,OAA3B,+BAMpB,qBAAKzB,UAAU,OAAf,SACQ,qBAAKqD,MAAO,CAACC,SAAU,UAAWvD,GAAG,gBAAgBC,UAAU,qBAA/D,SACI,iCACI,sBAAKA,UAAU,UAAf,UACI,+BAAKhC,KAAKwB,QAAQ/B,MAAME,SAASgB,KAAjC,IAAwCX,KAAKwB,QAAQ/B,MAAME,SAASgC,OACpE,uBACA,8BACA,+BAGQ3B,KAAKwB,QAAQ/B,MAAME,SAAS+B,cAAc6D,KAAI,SAACrC,EAAcsC,GAEzD,OAAItC,EAAaiC,OAAO,KAAO,EAAK3D,QAAQ/B,MAAME,SAASgB,KAEnD,cAAC,IAAD,CAAcmB,GAAI,SAAWoB,EAAatB,IAA1C,SACI,oBAAIyD,MAAO,CAACI,gBAAiBvC,EAAatB,MAAQ,EAAKnC,MAAMsD,QAAU,kBAAoB,MAA3F,SACI,4BACKG,EAAaiC,OAAO,QAHtBK,GAUX,cAAC,IAAD,CAAc1D,GAAI,SAAWoB,EAAatB,IAA1C,SACI,oBAAIyD,MAAO,CAACI,gBAAiBvC,EAAatB,MAAQ,EAAKnC,MAAMsD,QAAU,kBAAoB,MAA3F,SACI,4BACKG,EAAaiC,OAAO,QAHtBK,MAevBxF,KAAKP,MAAMqD,IAAM,oBAAIf,GAAG,aAAP,SACb,uBAAO+B,OAAQ9D,KAAK8D,OAAQD,QAAS7D,KAAK6D,QAASlD,KAAK,OAAOI,SAAUf,KAAKe,SAAUhB,MAAOC,KAAKP,MAAMkB,KAAM8B,KAAK,OAAOT,UAAU,YAAY0D,YAAY,kBAC1J,KAEZ,oBAAI3D,GAAG,aAAP,SACI,wBAAQQ,QAASvC,KAAK0D,MAAO1B,UAAU,MAAvC,SAA8ChC,KAAKP,MAAMqD,IAAM,YAAc,uBAMzF,sBAAKd,UAAU,OAAf,UACI,qBAAKA,UAAU,MAAf,SAAsBmD,EACtB,mCAAMA,EAAO,KAAOnF,KAAKwB,QAAQ/B,MAAME,SAASgB,KAAOwE,EAAO,GAAKA,EAAO,MACxE,gCAEF,qBAAKQ,IAAK3F,KAAKsD,YAAatB,UAAU,WAAtC,SAGSoD,EACCA,EAASQ,MAAM,GAAGC,UAAUN,KAAI,SAACO,EAAKN,GACpC,OACI,sBAAaxD,UAAU,MAAvB,UACI,gCACI,4BAAG,4BAAI8D,EAAIhB,WACX,+BAAOgB,EAAIC,UAEf,8BAAK,mBAAG/D,UAAU,SAAb,SAAuB8D,EAAIf,WAL1BS,MAHN,OAepB,qBAAKxD,UAAU,OAAf,SACChC,KAAKP,MAAMsD,QACZ,sBAAM5B,SAAUnB,KAAK2D,OAArB,SACI,uBAAOgC,IAAK3F,KAAKwD,SAAUf,KAAK,OAAOiD,YACnCP,EAAM,mBACUA,EAAO,KAAOnF,KAAKwB,QAAQ/B,MAAME,SAASgB,KAAOwE,EAAO,GAAKA,EAAO,IAAO,KAC7FpF,MAAOC,KAAKP,MAAM2D,QAASrC,SAAUf,KAAKe,SAAUJ,KAAK,cACrD,uBA5S9C,uCA6BI,SAAgCqF,EAAWxB,GACvC,MAAO,CAACzB,QAASiD,EAAUhD,MAAMC,OAAOlB,QA9BhD,GAA0BzB,cAwTXuC,IACfA,EAAKH,YAAc7C,E,UCvTNoG,EAAb,kDACE,WAAYzG,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACX0D,WAAW,EACX+C,MAAO,GACPxG,MAAO,EAAKF,MAAME,OAGpB,EAAKwF,eAAiB,EAAKA,eAAelE,KAApB,gBARL,EADrB,kDAYE,SAAemF,GACbnG,KAAKE,SAAS,CAAER,MAAOyG,MAb3B,+BAgBE,WAAqB,IAAD,OACZ7H,EAAMT,EAAe,aACvBS,GAAOA,EAAIoB,MACbX,MAAM,GAAD,OAAIiB,KAAKwB,QAAQ/B,MAAMb,MAAvB,8BAAkDN,EAAIoB,QACxDP,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACAA,EAAKC,SACP,EAAKkC,QAAQvB,YAAY3B,EAAIoB,OAC7B,EAAK8B,QAAQrB,YAAYd,EAAKR,MAC9BN,QAAQC,IAAIa,EAAKR,MAEjB,EAAKqB,SAAS,CACZR,MAAOpB,EAAIoB,MACXyD,WAAW,KAGb,EAAKjD,SAAS,CACZiD,WAAW,OAKnBnD,KAAKE,SAAS,CACZiD,WAAW,MAvCnB,oBA6CE,WAAU,IAAD,OACP,OAAInD,KAAKP,MAAM0D,UAEX,qBAAKkC,MACH,CACEe,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,QACRd,gBAAiB,QANrB,SASE,oBAAIJ,MAAO,CAACmB,MAAO,SAAnB,0BAMJ,cAAC,IAAD,CAAQC,SAAUC,GAAlB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,QAAM,EAACC,OAC3B,kBAEE,cAAC,IAAMC,SAAP,UAEyB,KAArB,EAAKtH,MAAMC,MAAe,cAAC,EAAD,CAAMO,YAAa,SAACP,GAAD,OAAW,EAAKQ,SAAS,CAAER,MAAOA,KAAUgB,UAAU,IAC/F,cAAC,IAAD,CAAUoB,GAAG,eAMzB,cAAC,IAAD,CAAO6E,KAAK,QAAQC,OAAK,EAACI,UACxB,SAACxH,GAAD,MAEuB,KAArB,EAAKC,MAAMC,MAAe,cAAC,EAAD,aAAMC,SAAU,EAAK6B,QAAQ/B,MAAME,SAAUuF,eAAgB,EAAKA,gBAAoB1F,IAC5G,cAAC,IAAD,CAAUsC,GAAG,SAIrB,cAAC,IAAD,CAAO6E,KAAK,YAAYC,OAAK,EAACC,QAAM,EAACG,UACnC,SAACxH,GAAD,MAEuB,KAArB,EAAKC,MAAMC,MAAe,cAAC,EAAD,aAAMC,SAAU,EAAK6B,QAAQ/B,MAAME,SAAUuF,eAAgB,EAAKA,gBAAoB1F,IAC5G,cAAC,IAAD,CAAUsC,GAAG,kBAzF/B,GAAyBxB,aAoGV2F,IACfA,EAAIvD,YAAc7C,EClHlB,IAYeoH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhI,MAAK,YAAkD,IAA/CiI,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCARO,EACJ,cAAC,EAAD,UACE,cAAC5H,EAAU6H,SAAX,UACG,SAAClG,GAAD,OACC,cAAC,EAAD,CAAK9B,MAAO8B,EAAQ/B,MAAMC,aAKlCiI,IAASb,OACPW,EACAG,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.886f77f9.chunk.js","sourcesContent":["export function getFromStorage(key) {\r\n  if (!key) {\r\n    return null;\r\n  }\r\n\r\n  try {\r\n    const valueStr = localStorage.getItem(key);\r\n    if (valueStr) {\r\n      return JSON.parse(valueStr);\r\n    }\r\n    return null;\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function setInStorage(key, obj) {\r\n  if (!key) {\r\n    console.log('Error: Key is missing');\r\n  }\r\n\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(obj));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}","export function register(proxy, user, cb) {\r\n  fetch(`${proxy}users/register`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Access-Control-Allow-Origin': '*'\r\n    },\r\n    body: JSON.stringify(user)\r\n  }).then(res => res.json())\r\n    .then(json => {\r\n      if (json.success) {\r\n        cb(json);\r\n      }\r\n    })\r\n}\r\n\r\nexport function login(proxy, user, cb) {\r\n  fetch(`${proxy}users/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': \"application/json\",\r\n      'Access-Control-Allow-Origin': '*'\r\n    },\r\n    body: JSON.stringify(user)\r\n  }).then(res => res.json())\r\n    .then(json => {\r\n      if (json.success) {\r\n        cb(json);\r\n      }\r\n    })\r\n}","import React, {Component} from 'react';\r\n\r\nexport class MyProvider extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            token: '',\r\n            userData: {},\r\n            proxy: 'https://epicenter-am.herokuapp.com/api/',\r\n            proxy2: 'http://138.68.12.208/chat/'\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MyContext.Provider value={{\r\n                state: this.state,\r\n                changeToken: (token) => this.setState({ token: token }),\r\n                setUserData: (data) => this.setState({ userData: data })\r\n            }}>\r\n                {this.props.children}\r\n            </MyContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyProvider;\r\nexport const MyContext = React.createContext();","import e from 'cors';\r\nimport React, { Component } from 'react'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport { setInStorage } from '../utils/storage';\r\n\r\nimport {register, login} from '../utils/authfuncs';\r\n\r\nimport './Home.css';\r\nimport { MyContext } from '../storage';\r\nimport App from '../App';\r\n\r\nexport class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            register: this.props.register,\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            redirect: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.select1 = this.select1.bind(this);\r\n        this.select2 = this.select2.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    select1() {\r\n        this.setState({\r\n            register: false\r\n        });\r\n    }\r\n\r\n    select2() {\r\n        this.setState({\r\n            register: true\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        const {\r\n            name,\r\n            email,\r\n            password\r\n        } = this.state;\r\n        e.preventDefault();\r\n        if (this.state.register) {\r\n            const newUser = {\r\n                name,\r\n                email,\r\n                password\r\n            };\r\n            //console.log(this.context);\r\n            register(this.context.state.proxy, newUser, (data) => {\r\n                login(this.context.state.proxy, newUser, (data2) => {\r\n                    const {\r\n                        email,\r\n                        name,\r\n                        conversations,\r\n                        tag,\r\n                        _id\r\n                    } = data.user;\r\n                    //console.log(this.context);\r\n                    this.context.setUserData({\r\n                        email,\r\n                        name,\r\n                        conversations,\r\n                        _id,\r\n                        tag\r\n                    });\r\n                    \r\n                    setInStorage('Epicenter', {token: data2.token});\r\n                    this.context.changeToken(data2.token);\r\n                    \r\n                    this.setState({\r\n                        name: '',\r\n                        email: '',\r\n                        password: '',\r\n                        redirect: true\r\n                    });\r\n                    \r\n                    this.props.changeToken(data2.token);\r\n                })\r\n            });\r\n        } else {\r\n            const info = {\r\n                email,\r\n                password\r\n            };\r\n            login(this.context.state.proxy, info, (data2) => {\r\n                //console.log(data2);\r\n                const {\r\n                email,\r\n                name,\r\n                conversations,\r\n                tag,\r\n                _id\r\n                } = data2.user\r\n                //console.log(this.context, 1)\r\n                this.context.setUserData({\r\n                email,\r\n                name,\r\n                conversations,\r\n                tag,\r\n                _id\r\n                });\r\n                //console.log(this.context, 2)\r\n\r\n                setInStorage('Epicenter', {token: data2.token});\r\n                this.context.changeToken(data2.token);\r\n                this.props.changeToken(data2.token);\r\n                //console.log(this.context, 3)\r\n                this.setState({\r\n                name: '',\r\n                email: '',\r\n                password: '',\r\n                redirect: true\r\n                });\r\n                \r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        if (this.state.redirect) {\r\n            return (<Redirect to=\"/chat\" />)\r\n        }\r\n        \r\n        return (\r\n            <div id=\"body\">\r\n                <div className=\"navbar\">\r\n                    <div className=\"container flex\">\r\n                        <a href=\"index.html\"><h1 className=\"logo\">Epicenter</h1></a>\r\n                        <nav>\r\n                            <ul>\r\n                                <li><a href=\"#home\">Home</a></li>\r\n                                <li><a href=\"#downloads\">Download</a></li>\r\n                                <li><a href=\"#login-register\">Login/Register</a></li>\r\n                            </ul>\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"main\">\r\n                        <div id=\"show-wrapper\" className=\"show-wrapper stuff\">\r\n                            <div id=\"home\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fill=\"#B35AA8\" fillOpacity=\"1\" d=\"M0,96L1440,320L1440,320L0,320Z\"></path></svg>\r\n                                <div className=\"title-wrapper\">\r\n                                    <h1 id=\"showcase-title\">The Perfect<br />Place To<br />Talk.</h1>\r\n                                    <p>Epicenter is the best place to chat with friends!</p>\r\n                                    <center>\r\n                                    <a href=\"#login-register\"><button>Start Chatting</button></a>\r\n                                    </center>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"downloads\">\r\n                                <div id=\"section2\">\r\n                                    <div id=\"blackthing\"></div>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fill=\"#333\" fillOpacity=\"1\" d=\"M0,288L1440,160L1440,320L0,320Z\"></path></svg>\r\n                                    <div className=\"title-wrapper\">\r\n                                        <h1 id=\"showcase-title\">We are currently not offering any downloads.</h1>\r\n                                        <p>Stay tuned for upcoming releases!</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"login-register\">\r\n                                <div id=\"auth-wrapper\" className=\"auth-wrapper stuff\">\r\n                                    <div className=\"auth\">\r\n                                        <div className={this.state.register ? 'label1' : 'label1 auth-selected'} onClick={this.select1}>Login</div>\r\n                                        <div className={this.state.register ? 'label2 auth-selected' : 'label2'} onClick={this.select2}>Register</div>\r\n                                        <div className=\"infoarea auth-selected\">\r\n                                        {this.state.register ? \r\n                                        <div>\r\n                                            <label htmlFor=\"name\">Name: </label><br />\r\n                                            <input type=\"text\" className=\"editinput\" name=\"name\" value={this.state.name} onChange={this.onChange}/>\r\n                                        </div> : null}\r\n                                        <div>\r\n                                            <label htmlFor=\"username\">Email: </label><br />\r\n                                            <input type=\"email\" className=\"editinput\" name=\"email\" value={this.state.email} onChange={this.onChange}/>\r\n                                        </div>\r\n                                        <div>\r\n                                            <label htmlFor=\"username\">Password: </label><br />\r\n                                            <input type=\"password\" className=\"editinput\" name=\"password\" value={this.state.password} onChange={this.onChange}/>\r\n                                        </div>\r\n                                        <div>\r\n                                            <button onClick={this.onSubmit}>Submit</button>\r\n                                        </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\nHome.contextType = MyContext","import io from \"socket.io-client\";\r\n\r\nexport const socket = io('https://epicenter-am.herokuapp.com');","import React, { Component } from 'react'\r\n\r\nimport socketIOClient from 'socket.io-client'\r\n\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport { MyContext } from '../storage';\r\nimport { getFromStorage } from '../utils/storage';\r\nimport {socket} from '../utils/socket';\r\n\r\nimport './Chat.css'\r\n\r\nexport class Chat extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirect: false,\r\n            new: false,\r\n            name: '',\r\n            convoid: this.props.match.params.id,\r\n            conversation: {},\r\n            isLoading: true,\r\n            message: '',\r\n            newFocused: false\r\n        };\r\n\r\n        \r\n        this.messagesEnd = React.createRef();\r\n        this.inputRef = React.createRef();\r\n        \r\n        this.logout = this.logout.bind(this);\r\n        this.onNew = this.onNew.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSend = this.onSend.bind(this);\r\n        this.scrollToBottom = this.scrollToBottom.bind(this);\r\n        this.onFocus = this.onFocus.bind(this);\r\n        this.onBlur = this.onBlur.bind(this);\r\n        this.socket = socket;\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        return {convoid: nextProps.match.params.id}\r\n    }\r\n\r\n    \r\n    \r\n    componentDidMount() {\r\n        \r\n        if (!this.state.isLoading) {\r\n            //this.scrollToBottom();\r\n            if (this.state.convoid) {\r\n                this.inputRef.current.focus();\r\n            }\r\n        }\r\n        this.socket.on('refresh-convo', () => {\r\n            fetch(`${this.context.state.proxy}users/verify?token=${this.context.state.token}`)\r\n                .then(response => response.json())\r\n                .then(json => {\r\n                    this.context.setUserData(json.user);\r\n                })\r\n        });\r\n\r\n        this.socket.on('refresh-after-msg', (convo) => {\r\n            console.log('bru');\r\n            this.setState({\r\n                conversation: convo,\r\n                message: ''\r\n            });\r\n        })\r\n        if (this.state.convoid !== undefined) {\r\n            this.context.state.userData.conversations.forEach(conversation => {\r\n                if (conversation._id === this.state.convoid) {\r\n                    this.socket.emit('join-room', this.state.convoid, this.context.state.userData._id);\r\n                    console.log(conversation);\r\n                    \r\n                    this.setState({\r\n                        conversation: conversation,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            })\r\n        } else {\r\n            this.setState({\r\n                isLoading: false\r\n            });\r\n        }\r\n        //this.socket.emit('hello');\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (!this.state.isLoading) {\r\n            //this.scrollToBottom();\r\n            console.log(1);\r\n            if (!this.state.newFocused && this.state.convoid) {\r\n                //this.inputRef.current.focus();\r\n            }\r\n        }\r\n        if (prevState.conversation._id !== this.state.convoid) {\r\n            this.context.state.userData.conversations.forEach(conversation => {\r\n                if (conversation._id === this.state.convoid) {\r\n                    this.socket.emit('join-room', this.state.convoid, this.context.state.userData._id);\r\n                    console.log(conversation);\r\n                    console.log(conversation._id, this.state.convoid);\r\n                    console.log(conversation, this.state.conversation);\r\n                    this.setState({\r\n                        conversation: conversation,\r\n                        isLoading: false\r\n                    });\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    onBlur() {\r\n        this.setState({\r\n            newFocused: false\r\n        });\r\n    }\r\n\r\n    onFocus() {\r\n        this.setState({\r\n            newFocused: true\r\n        });\r\n    }\r\n    \r\n\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    onNew(e) {\r\n        e.preventDefault();\r\n        if(this.state.new === false) {\r\n            this.setState({\r\n                new: true\r\n            });\r\n        } else {\r\n            const {\r\n                name\r\n            } = this.state;\r\n\r\n            let name1 = name.split(\"#\")[0];\r\n            let tag = name.split(\"#\")[1];\r\n\r\n            fetch(`${this.context.state.proxy}conversations/new`, {\r\n                method: 'POST',\r\n                headers: {\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*'\r\n                },\r\n                body: JSON.stringify({\r\n                    name: name1,\r\n                    tag,\r\n                    userid: this.context.state.userData._id\r\n                })\r\n            }).then(res => res.json())\r\n                .then(json => {\r\n                if (json.success) {\r\n                    console.log(json);\r\n                    this.socket.emit('conversation-created');\r\n                    window.location.href = `${this.context.state.proxy2}${json.message._id}`;\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    scrollToBottom() {\r\n\t\t//this.messagesEnd.current.scrollIntoView({behavior: 'smooth'});\r\n        //console.log(this.messagesEnd);\r\n\t}\r\n\r\n    onSend(e) {\r\n        const author = this.context.state.userData.name;\r\n        const text = this.state.message\r\n        const convoid = this.state.convoid\r\n        let date1 = new Date();\r\n        let stuff = {\r\n            author: author,\r\n            text: text,\r\n            convoid: convoid\r\n        };\r\n        e.preventDefault();\r\n        if (text !== '') {\r\n            this.socket.emit('message-sent', this.state.convoid, stuff);\r\n            \r\n        }\r\n    }\r\n\r\n    logout(e) {\r\n        e.preventDefault();\r\n        const obj = getFromStorage('Epicenter');\r\n\r\n        if (obj && obj.token) {\r\n            fetch(this.context.state.proxy + 'users/logout?token=' + obj.token)\r\n                .then(res => res.json())\r\n                .then(json => {\r\n                    if (json.success) {\r\n                        this.props.setParentToken('');\r\n                        this.context.changeToken('');\r\n                        this.context.setUserData({});\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        let {\r\n            people,\r\n            messages\r\n        } = this.state.conversation;\r\n        //console.log(this.state)\r\n        if (this.state.isLoading === true) {\r\n            return ('isLoading')\r\n        }\r\n        return (\r\n            <div id=\"body\">\r\n                <div className=\"navbar\">\r\n                    <div className=\"container flex\">\r\n                        <a href=\"index.html\"><h1 className=\"logo\">Epicenter</h1></a>\r\n                        <nav>\r\n                            <ul>\r\n                                \r\n                                <li><Link to=\"/\" onClick={this.logout}>Logout</Link></li>\r\n                            </ul>\r\n                        </nav>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"main\">\r\n                        <div style={{overflow: 'hidden'}} id=\"show-wrapper2\" className=\"show-wrapper stuff\">\r\n                            <main>\r\n                                <div className=\"listnav\">\r\n                                    <h3>{this.context.state.userData.name}#{this.context.state.userData.tag}</h3>\r\n                                    <hr />\r\n                                    <nav>\r\n                                    <ul>\r\n                                        \r\n                                        {\r\n                                            this.context.state.userData.conversations.map((conversation, i) => {\r\n                                                //console.log(conversation);\r\n                                                if (conversation.people[0] === this.context.state.userData.name) {\r\n                                                    return (\r\n                                                        <Link key={i} to={'/chat/' + conversation._id}>\r\n                                                            <li style={{backgroundColor: conversation._id === this.state.convoid ? 'rgb(61, 60, 60)' : null}}>\r\n                                                                <p>\r\n                                                                    {conversation.people[1]}\r\n                                                                </p>\r\n                                                            </li>\r\n                                                        </Link>\r\n                                                    )\r\n                                                } else {\r\n                                                    return (\r\n                                                        <Link key={i} to={'/chat/' + conversation._id}>\r\n                                                            <li style={{backgroundColor: conversation._id === this.state.convoid ? 'rgb(61, 60, 60)' : null}}>\r\n                                                                <p>\r\n                                                                    {conversation.people[0]}\r\n                                                                </p>\r\n                                                            </li>\r\n                                                        </Link>\r\n                                                    )\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                                \r\n                                        \r\n                                        \r\n                                        {\r\n                                            this.state.new ? <li id=\"buttonwrap\">\r\n                                                <input onBlur={this.onBlur} onFocus={this.onFocus} name=\"name\" onChange={this.onChange} value={this.state.name} type=\"text\" className=\"new-input\" placeholder=\"ex. Steve#0\"/>\r\n                                            </li> : null\r\n                                        }\r\n                                        <li id=\"buttonwrap\">\r\n                                            <button onClick={this.onNew} className=\"new\">{this.state.new ? 'Create DM' : 'New DM +'}</button>\r\n                                        </li>\r\n                                    </ul>\r\n                                    </nav>\r\n                                </div>\r\n\r\n                                <div className=\"chat\">\r\n                                    <div className=\"top\">{people ?\r\n                                    <h2>@{people[0] === this.context.state.userData.name ? people[1] : people[0]}</h2>\r\n                                    : 'Select a person to talk to!'}\r\n                                    </div>\r\n                                    <div ref={this.messagesEnd} className=\"chatarea\">\r\n                                        \r\n                                        {\r\n                                            !messages ? null\r\n                                            : messages.slice(0).reverse().map((msg, i) => {\r\n                                                return (\r\n                                                    <div key={i} className=\"msg\">\r\n                                                        <div>\r\n                                                            <p><b>{msg.author}</b></p>\r\n                                                            <span>{msg.date}</span>\r\n                                                        </div>\r\n                                                        <div><p className=\"msgtxt\">{msg.text}</p></div>\r\n                                                    </div>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                        \r\n                                    </div>\r\n                                    <div className=\"type\">\r\n                                    {this.state.convoid ?\r\n                                    <form onSubmit={this.onSend}>\r\n                                        <input ref={this.inputRef} type=\"text\" placeholder={\r\n                                            people ?\r\n                                                `Message @${people[0] === this.context.state.userData.name ? people[1] : people[0]}` : null\r\n                                        } value={this.state.message} onChange={this.onChange} name='message'/>\r\n                                    </form> : null}\r\n                                    </div>\r\n                                </div>\r\n                            </main>\r\n                        </div>\r\n                        \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat\r\nChat.contextType = MyContext","import React, {Component} from 'react';\nimport {Redirect, Route, BrowserRouter as Router, Switch} from 'react-router-dom';\n\nimport Home from './components/Home'\nimport Chat from './components/Chat'\n\nimport { MyContext } from './storage'\nimport {\n  getFromStorage\n} from './utils/storage';\n\nimport './App.css';\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      error: '',\n      token: this.props.token\n    };\n\n    this.setParentToken = this.setParentToken.bind(this);\n  }\n\n  setParentToken(t) {\n    this.setState({ token: t });\n  }\n\n  componentDidMount() {\n    const obj = getFromStorage('Epicenter');\n    if (obj && obj.token) {\n      fetch(`${this.context.state.proxy}users/verify?token=${obj.token}`)\n        .then(res => res.json())\n        .then(json => {\n          if (json.success) {\n            this.context.changeToken(obj.token);\n            this.context.setUserData(json.user);\n            console.log(json.user);\n            //console.log(this.context.state.userData);\n            this.setState({\n              token: obj.token,\n              isLoading: false\n            })\n          } else {\n            this.setState({\n              isLoading: false\n            });\n          }\n        })\n    } else {\n      this.setState({\n        isLoading: false\n      });\n    }\n  \n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return (\n        <div style={\n          {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '100vh',\n            backgroundColor: '#333'\n          }\n        }>\n          <h1 style={{color: 'white'}}>Loading...</h1>\n        </div>\n      )\n    }\n\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/\" exact strict render={\n            () => (\n\n              <React.Fragment>\n                {\n                  this.state.token === '' ? <Home changeToken={(token) => this.setState({ token: token })} register={false} />\n                    : <Redirect to=\"/chat\" />\n                }\n              </React.Fragment>\n            )\n          } />\n\n          <Route path=\"/chat\" exact component={\n            (props) => (\n\n              this.state.token !== '' ? <Chat userData={this.context.state.userData} setParentToken={this.setParentToken} {...props} />\n                : <Redirect to=\"/\" />\n            )\n          } />\n          \n          <Route path=\"/chat/:id\" exact strict component={\n            (props) => (\n\n              this.state.token !== '' ? <Chat userData={this.context.state.userData} setParentToken={this.setParentToken} {...props} />\n                : <Redirect to=\"/\" />\n            )\n          } />\n\n          \n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App;\nApp.contextType = MyContext\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport MyProvider from './storage';\nimport { MyContext } from './storage';\nimport reportWebVitals from './reportWebVitals';\n\nconst thing = (\n  <MyProvider>\n    <MyContext.Consumer>\n      {(context) =>\n        <App token={context.state.token} />}\n    </MyContext.Consumer>\n  </MyProvider>\n);\n\nReactDOM.render(\n  thing,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}